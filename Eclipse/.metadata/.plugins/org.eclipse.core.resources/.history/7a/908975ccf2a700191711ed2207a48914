package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import connection.SingleConnection;
import domain.Usuario;

public class UsuarioDao {

	private Connection connection;

	public UsuarioDao() {
		connection = SingleConnection.getConnection();
	}

	public void salvar(Usuario usuario) {
		String sql = "insert into usuario (email,senha) values (?,?)";
		try {
			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setString(1, usuario.getEmail());
			statement.setString(2, usuario.getSenha());
			statement.execute();
			connection.commit();
		} catch (Exception e) {
			e.printStackTrace();
			try {
				connection.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}
	}

	public void excluir(int codigo) {
		try {
			String sql = "delete from usuario where codigo_usuario=?";
			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setInt(1, codigo);
			statement.execute();
			connection.commit();
		} catch (SQLException ex) {
			ex.printStackTrace();
			try {
				connection.rollback();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}

	public List<Usuario> listar() throws SQLException {
		List<Usuario> lista = new ArrayList<>();
		String sql = "select * from usuario order by email";
		PreparedStatement statement = connection.prepareStatement(sql);
		ResultSet resultSet = statement.executeQuery();
		while (resultSet.next()) {
			Usuario usuario = new Usuario();
			usuario.setCodigo(resultSet.getInt("codigo_usuario"));
			usuario.setEmail(resultSet.getString("email"));
			usuario.setSenha(resultSet.getString("senha"));
			lista.add(usuario);
		}
		return lista;
	}

	public boolean logar(String email, String senha) throws SQLException {
		String sql = "select * from usuario where email = '" + email + "' and senha = '" + senha + "'";
		PreparedStatement statement = connection.prepareStatement(sql);
		ResultSet resultSet = statement.executeQuery();
		if (resultSet.next()) {
			return true;
		} else {
			return false;
		}
	}

	public Usuario buscarPorCodigo(int codigo) throws SQLException {
		String sql = "select * from usuario where codigo_usuario = " + codigo + "";
		PreparedStatement statement = connection.prepareStatement(sql);
		ResultSet resultSet = statement.executeQuery();
		if (resultSet.next()) {
			Usuario usuario = new Usuario();
			usuario.setCodigo(resultSet.getInt("codigo_usuario"));
			usuario.setEmail(resultSet.getString("email"));
			usuario.setSenha(resultSet.getString("senha"));
			return usuario;
		} else {
			return null;
		}
	}

	public void alterar(Usuario usuario) {
		String sql = "update usuario set email=?,senha=? where codigo_usuario=?";
		try {
			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setString(1, usuario.getEmail());
			statement.setString(2, usuario.getSenha());
			statement.setInt(3, usuario.getCodigo());
			statement.executeUpdate();
			connection.commit();
		} catch (Exception e) {
			e.printStackTrace();
			try {
				connection.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}
	}
}
